; ModuleID = 'integraph'
source_filename = "integraph"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@fmt.2 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@fmt.3 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.4 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@fmt.5 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@tmp = private unnamed_addr constant [5 x i8] c"true\00", align 1
@tmp.6 = private unnamed_addr constant [6 x i8] c"false\00", align 1

declare i32 @printf(i8*, ...)

declare i32 @printbig(i32)

define i1 @second(i1 %b) {
entry:
  %b1 = alloca i1, align 1
  store i1 %b, i1* %b1, align 1
  %b2 = load i1, i1* %b1, align 1
  %tmp = xor i1 %b2, true
  ret i1 %tmp
}

define void @main() {
entry:
  %i = alloca i32, align 4
  %b = alloca i1, align 1
  %c = alloca i1, align 1
  store i1 false, i1* %b, align 1
  store i32 1, i32* %i, align 4
  %i1 = load i32, i32* %i, align 4
  %tmp = icmp eq i32 %i1, 1
  br i1 %tmp, label %then, label %else7

merge:                                            ; preds = %else7, %merge4
  ret void

then:                                             ; preds = %entry
  %b2 = load i1, i1* %b, align 1
  %second_result = call i1 @second(i1 %b2)
  store i1 %second_result, i1* %c, align 1
  %c3 = load i1, i1* %c, align 1
  br i1 %c3, label %then5, label %else

merge4:                                           ; preds = %else, %then5
  br label %merge

then5:                                            ; preds = %then
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @tmp, i32 0, i32 0))
  br label %merge4

else:                                             ; preds = %then
  %printf6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.4, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @tmp.6, i32 0, i32 0))
  br label %merge4

else7:                                            ; preds = %entry
  br label %merge
}
