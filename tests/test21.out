; ModuleID = 'integraph'
source_filename = "integraph"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@fmt.2 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1

declare i32 @printf(i8*, ...)

declare i32 @printbig(i32)

define void @main() {
entry:
  %arr = alloca [6 x i32], align 4
  %arr2 = alloca [6 x i32], align 4
  %arr3 = alloca [6 x i32], align 4
  %arr4 = alloca [6 x double], align 8
  %arr5 = alloca [6 x double], align 8
  %arr6 = alloca [6 x double], align 8
  %i = alloca i32, align 4
  store [6 x i32] [i32 2, i32 3, i32 4, i32 5, i32 6, i32 7], [6 x i32]* %arr, align 4
  store [6 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5, i32 6], [6 x i32]* %arr2, align 4
  store [6 x double] [double 2.200000e+00, double 3.300000e+00, double 4.400000e+00, double 5.500000e+00, double 6.600000e+00, double 7.700000e+00], [6 x double]* %arr4, align 8
  store [6 x double] [double 1.100000e+00, double 2.100000e+00, double 3.100000e+00, double 4.100000e+00, double 5.100000e+00, double 6.100000e+00], [6 x double]* %arr5, align 8
  %arr1 = load [6 x i32], [6 x i32]* %arr, align 4
  %arr22 = load [6 x i32], [6 x i32]* %arr2, align 4
  %tempArr = alloca [6 x i32], align 4
  %arr7 = getelementptr [6 x i32], [6 x i32]* %arr, i32 0, i32 0
  %arr8 = load i32, i32* %arr7, align 4
  %arr29 = getelementptr [6 x i32], [6 x i32]* %arr2, i32 0, i32 0
  %arr210 = load i32, i32* %arr29, align 4
  %temp = mul i32 %arr8, %arr210
  %tempArr11 = getelementptr [6 x i32], [6 x i32]* %tempArr, i32 0, i32 0
  store i32 %temp, i32* %tempArr11, align 4
  %arr12 = getelementptr [6 x i32], [6 x i32]* %arr, i32 0, i32 1
  %arr13 = load i32, i32* %arr12, align 4
  %arr214 = getelementptr [6 x i32], [6 x i32]* %arr2, i32 0, i32 1
  %arr215 = load i32, i32* %arr214, align 4
  %temp16 = mul i32 %arr13, %arr215
  %tempArr17 = getelementptr [6 x i32], [6 x i32]* %tempArr, i32 0, i32 1
  store i32 %temp16, i32* %tempArr17, align 4
  %arr18 = getelementptr [6 x i32], [6 x i32]* %arr, i32 0, i32 2
  %arr19 = load i32, i32* %arr18, align 4
  %arr220 = getelementptr [6 x i32], [6 x i32]* %arr2, i32 0, i32 2
  %arr221 = load i32, i32* %arr220, align 4
  %temp22 = mul i32 %arr19, %arr221
  %tempArr23 = getelementptr [6 x i32], [6 x i32]* %tempArr, i32 0, i32 2
  store i32 %temp22, i32* %tempArr23, align 4
  %arr24 = getelementptr [6 x i32], [6 x i32]* %arr, i32 0, i32 3
  %arr25 = load i32, i32* %arr24, align 4
  %arr226 = getelementptr [6 x i32], [6 x i32]* %arr2, i32 0, i32 3
  %arr227 = load i32, i32* %arr226, align 4
  %temp28 = mul i32 %arr25, %arr227
  %tempArr29 = getelementptr [6 x i32], [6 x i32]* %tempArr, i32 0, i32 3
  store i32 %temp28, i32* %tempArr29, align 4
  %arr30 = getelementptr [6 x i32], [6 x i32]* %arr, i32 0, i32 4
  %arr31 = load i32, i32* %arr30, align 4
  %arr232 = getelementptr [6 x i32], [6 x i32]* %arr2, i32 0, i32 4
  %arr233 = load i32, i32* %arr232, align 4
  %temp34 = mul i32 %arr31, %arr233
  %tempArr35 = getelementptr [6 x i32], [6 x i32]* %tempArr, i32 0, i32 4
  store i32 %temp34, i32* %tempArr35, align 4
  %arr36 = getelementptr [6 x i32], [6 x i32]* %arr, i32 0, i32 5
  %arr37 = load i32, i32* %arr36, align 4
  %arr238 = getelementptr [6 x i32], [6 x i32]* %arr2, i32 0, i32 5
  %arr239 = load i32, i32* %arr238, align 4
  %temp40 = mul i32 %arr37, %arr239
  %tempArr41 = getelementptr [6 x i32], [6 x i32]* %tempArr, i32 0, i32 5
  store i32 %temp40, i32* %tempArr41, align 4
  %tempArr42 = getelementptr [6 x i32], [6 x i32]* %tempArr, i32 0
  %tempArr43 = load [6 x i32], [6 x i32]* %tempArr42, align 4
  store [6 x i32] %tempArr43, [6 x i32]* %arr3, align 4
  %arr444 = load [6 x double], [6 x double]* %arr4, align 8
  %arr545 = load [6 x double], [6 x double]* %arr5, align 8
  %tempArr46 = alloca [6 x double], align 8
  %arr447 = getelementptr [6 x double], [6 x double]* %arr4, i32 0, i32 0
  %arr448 = load double, double* %arr447, align 8
  %arr549 = getelementptr [6 x double], [6 x double]* %arr5, i32 0, i32 0
  %arr550 = load double, double* %arr549, align 8
  %temp51 = fmul double %arr448, %arr550
  %tempArr52 = getelementptr [6 x double], [6 x double]* %tempArr46, i32 0, i32 0
  store double %temp51, double* %tempArr52, align 8
  %arr453 = getelementptr [6 x double], [6 x double]* %arr4, i32 0, i32 1
  %arr454 = load double, double* %arr453, align 8
  %arr555 = getelementptr [6 x double], [6 x double]* %arr5, i32 0, i32 1
  %arr556 = load double, double* %arr555, align 8
  %temp57 = fmul double %arr454, %arr556
  %tempArr58 = getelementptr [6 x double], [6 x double]* %tempArr46, i32 0, i32 1
  store double %temp57, double* %tempArr58, align 8
  %arr459 = getelementptr [6 x double], [6 x double]* %arr4, i32 0, i32 2
  %arr460 = load double, double* %arr459, align 8
  %arr561 = getelementptr [6 x double], [6 x double]* %arr5, i32 0, i32 2
  %arr562 = load double, double* %arr561, align 8
  %temp63 = fmul double %arr460, %arr562
  %tempArr64 = getelementptr [6 x double], [6 x double]* %tempArr46, i32 0, i32 2
  store double %temp63, double* %tempArr64, align 8
  %arr465 = getelementptr [6 x double], [6 x double]* %arr4, i32 0, i32 3
  %arr466 = load double, double* %arr465, align 8
  %arr567 = getelementptr [6 x double], [6 x double]* %arr5, i32 0, i32 3
  %arr568 = load double, double* %arr567, align 8
  %temp69 = fmul double %arr466, %arr568
  %tempArr70 = getelementptr [6 x double], [6 x double]* %tempArr46, i32 0, i32 3
  store double %temp69, double* %tempArr70, align 8
  %arr471 = getelementptr [6 x double], [6 x double]* %arr4, i32 0, i32 4
  %arr472 = load double, double* %arr471, align 8
  %arr573 = getelementptr [6 x double], [6 x double]* %arr5, i32 0, i32 4
  %arr574 = load double, double* %arr573, align 8
  %temp75 = fmul double %arr472, %arr574
  %tempArr76 = getelementptr [6 x double], [6 x double]* %tempArr46, i32 0, i32 4
  store double %temp75, double* %tempArr76, align 8
  %arr477 = getelementptr [6 x double], [6 x double]* %arr4, i32 0, i32 5
  %arr478 = load double, double* %arr477, align 8
  %arr579 = getelementptr [6 x double], [6 x double]* %arr5, i32 0, i32 5
  %arr580 = load double, double* %arr579, align 8
  %temp81 = fmul double %arr478, %arr580
  %tempArr82 = getelementptr [6 x double], [6 x double]* %tempArr46, i32 0, i32 5
  store double %temp81, double* %tempArr82, align 8
  %tempArr83 = getelementptr [6 x double], [6 x double]* %tempArr46, i32 0
  %tempArr84 = load [6 x double], [6 x double]* %tempArr83, align 8
  store [6 x double] %tempArr84, [6 x double]* %arr6, align 8
  store i32 0, i32* %i, align 4
  br label %while

while:                                            ; preds = %while_body, %entry
  %i89 = load i32, i32* %i, align 4
  %tmp90 = icmp slt i32 %i89, 6
  br i1 %tmp90, label %while_body, label %merge

while_body:                                       ; preds = %while
  %i85 = load i32, i32* %i, align 4
  %arr386 = getelementptr [6 x i32], [6 x i32]* %arr3, i32 0, i32 %i85
  %arr387 = load i32, i32* %arr386, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %arr387)
  %i88 = load i32, i32* %i, align 4
  %tmp = add i32 %i88, 1
  store i32 %tmp, i32* %i, align 4
  br label %while

merge:                                            ; preds = %while
  store i32 0, i32* %i, align 4
  br label %while91

while91:                                          ; preds = %while_body92, %merge
  %i99 = load i32, i32* %i, align 4
  %tmp100 = icmp slt i32 %i99, 6
  br i1 %tmp100, label %while_body92, label %merge101

while_body92:                                     ; preds = %while91
  %i93 = load i32, i32* %i, align 4
  %arr694 = getelementptr [6 x double], [6 x double]* %arr6, i32 0, i32 %i93
  %arr695 = load double, double* %arr694, align 8
  %printf96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), double %arr695)
  %i97 = load i32, i32* %i, align 4
  %tmp98 = add i32 %i97, 1
  store i32 %tmp98, i32* %i, align 4
  br label %while91

merge101:                                         ; preds = %while91
  ret void
}
