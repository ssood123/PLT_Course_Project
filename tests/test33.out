; ModuleID = 'integraph'
source_filename = "integraph"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@fmt.2 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@tmp = private unnamed_addr constant [14 x i8] c"printing arr3\00", align 1
@tmp.3 = private unnamed_addr constant [14 x i8] c"printing mat1\00", align 1
@fmt.4 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.5 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@fmt.6 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@tmp.7 = private unnamed_addr constant [17 x i8] c"this is a string\00", align 1

declare i32 @printf(i8*, ...)

declare i32 @printbig(i32)

define void @printMore() {
entry:
  %mat1 = alloca [4 x [4 x i32]], align 4
  %arr1 = alloca [3 x double], align 8
  %arr2 = alloca [3 x double], align 8
  %arr3 = alloca [3 x double], align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store [3 x double] [double 8.800000e+00, double 9.900000e+00, double 1.010000e+01], [3 x double]* %arr1, align 8
  store [3 x double] [double 7.700000e+00, double 8.800000e+00, double 9.900000e+00], [3 x double]* %arr2, align 8
  %arr11 = load [3 x double], [3 x double]* %arr1, align 8
  %arr22 = load [3 x double], [3 x double]* %arr2, align 8
  %tempArr = alloca [3 x double], align 8
  %arr13 = getelementptr [3 x double], [3 x double]* %arr1, i32 0, i32 0
  %arr14 = load double, double* %arr13, align 8
  %arr25 = getelementptr [3 x double], [3 x double]* %arr2, i32 0, i32 0
  %arr26 = load double, double* %arr25, align 8
  %temp = fsub double %arr14, %arr26
  %tempArr7 = getelementptr [3 x double], [3 x double]* %tempArr, i32 0, i32 0
  store double %temp, double* %tempArr7, align 8
  %arr18 = getelementptr [3 x double], [3 x double]* %arr1, i32 0, i32 1
  %arr19 = load double, double* %arr18, align 8
  %arr210 = getelementptr [3 x double], [3 x double]* %arr2, i32 0, i32 1
  %arr211 = load double, double* %arr210, align 8
  %temp12 = fsub double %arr19, %arr211
  %tempArr13 = getelementptr [3 x double], [3 x double]* %tempArr, i32 0, i32 1
  store double %temp12, double* %tempArr13, align 8
  %arr114 = getelementptr [3 x double], [3 x double]* %arr1, i32 0, i32 2
  %arr115 = load double, double* %arr114, align 8
  %arr216 = getelementptr [3 x double], [3 x double]* %arr2, i32 0, i32 2
  %arr217 = load double, double* %arr216, align 8
  %temp18 = fsub double %arr115, %arr217
  %tempArr19 = getelementptr [3 x double], [3 x double]* %tempArr, i32 0, i32 2
  store double %temp18, double* %tempArr19, align 8
  %tempArr20 = getelementptr [3 x double], [3 x double]* %tempArr, i32 0
  %tempArr21 = load [3 x double], [3 x double]* %tempArr20, align 8
  store [3 x double] %tempArr21, [3 x double]* %arr3, align 8
  store [4 x [4 x i32]] [[4 x i32] [i32 1, i32 2, i32 3, i32 4], [4 x i32] [i32 5, i32 6, i32 7, i32 8], [4 x i32] [i32 9, i32 10, i32 11, i32 12], [4 x i32] [i32 13, i32 14, i32 15, i32 16]], [4 x [4 x i32]]* %mat1, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 17)
  %printf22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 -5)
  %printf23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 388)
  %printf24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 10)
  %printf25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), double 0x3FF6E147AE147AE0)
  %printf26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), double 0x3FF6E147AE147AE0)
  %printf27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), double 6.200000e+00)
  %printf28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), double 0x3FFA555555555556)
  %printf29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i1 true)
  %printf30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i1 false)
  %printf31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i1 false)
  %printf32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i1 true)
  %printf33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i1 true)
  %printf34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i1 false)
  %printf35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i1 false)
  %printf36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i1 true)
  %printf37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i1 true)
  %printf38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i1 false)
  %printf39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @tmp, i32 0, i32 0))
  store i32 0, i32* %i, align 4
  br label %while

while:                                            ; preds = %while_body, %entry
  %i45 = load i32, i32* %i, align 4
  %tmp46 = icmp slt i32 %i45, 3
  br i1 %tmp46, label %while_body, label %merge

while_body:                                       ; preds = %while
  %i40 = load i32, i32* %i, align 4
  %arr341 = getelementptr [3 x double], [3 x double]* %arr3, i32 0, i32 %i40
  %arr342 = load double, double* %arr341, align 8
  %printf43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), double %arr342)
  %i44 = load i32, i32* %i, align 4
  %tmp = add i32 %i44, 1
  store i32 %tmp, i32* %i, align 4
  br label %while

merge:                                            ; preds = %while
  %printf47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.1, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @tmp.3, i32 0, i32 0))
  store i32 0, i32* %i, align 4
  br label %while48

while48:                                          ; preds = %merge61, %merge
  %i64 = load i32, i32* %i, align 4
  %tmp65 = icmp slt i32 %i64, 4
  br i1 %tmp65, label %while_body49, label %merge66

while_body49:                                     ; preds = %while48
  store i32 0, i32* %j, align 4
  br label %while50

while50:                                          ; preds = %while_body51, %while_body49
  %j59 = load i32, i32* %j, align 4
  %tmp60 = icmp slt i32 %j59, 4
  br i1 %tmp60, label %while_body51, label %merge61

while_body51:                                     ; preds = %while50
  %i52 = load i32, i32* %i, align 4
  %j53 = load i32, i32* %j, align 4
  %mat154 = getelementptr [4 x [4 x i32]], [4 x [4 x i32]]* %mat1, i32 0, i32 %i52, i32 %j53
  %mat155 = load i32, i32* %mat154, align 4
  %printf56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %mat155)
  %j57 = load i32, i32* %j, align 4
  %tmp58 = add i32 %j57, 1
  store i32 %tmp58, i32* %j, align 4
  br label %while50

merge61:                                          ; preds = %while50
  %i62 = load i32, i32* %i, align 4
  %tmp63 = add i32 %i62, 1
  store i32 %tmp63, i32* %i, align 4
  br label %while48

merge66:                                          ; preds = %while48
  ret void
}

define void @main() {
entry:
  %i = alloca i32, align 4
  %f = alloca double, align 8
  %b = alloca i1, align 1
  %s = alloca i8*, align 8
  store i32 10, i32* %i, align 4
  store double 1.023400e+01, double* %f, align 8
  store i1 true, i1* %b, align 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @tmp.7, i32 0, i32 0), i8** %s, align 8
  %i1 = load i32, i32* %i, align 4
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.4, i32 0, i32 0), i32 %i1)
  %f2 = load double, double* %f, align 8
  %printf3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.6, i32 0, i32 0), double %f2)
  %b4 = load i1, i1* %b, align 1
  %printf5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.4, i32 0, i32 0), i1 %b4)
  %s6 = load i8*, i8** %s, align 8
  %printf7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.5, i32 0, i32 0), i8* %s6)
  %i8 = load i32, i32* %i, align 4
  %tmp = mul i32 %i8, 4
  %printf9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.4, i32 0, i32 0), i32 %tmp)
  %f10 = load double, double* %f, align 8
  %tmp11 = fsub double %f10, 0x4020666666666666
  %printf12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.6, i32 0, i32 0), double %tmp11)
  %b13 = load i1, i1* %b, align 1
  %b14 = load i1, i1* %b, align 1
  %tmp15 = xor i1 %b14, true
  %tmp16 = and i1 %b13, %tmp15
  %printf17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.4, i32 0, i32 0), i1 %tmp16)
  call void @printMore()
  ret void
}
